{"version":3,"file":"static/js/304.b79fea10.chunk.js","mappings":"mPAEaA,E,QAAYC,GAAAA,GAAH,mF,mBCIhBC,GAAYC,EAAAA,EAAAA,OAAK,kBACrB,4BADqB,IA0BvB,EAtBa,WACX,OAAsCC,EAAAA,EAAAA,UAAS,MAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAWA,OAVAC,aAAaC,WAAW,WAExBC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,mBACGC,MAAK,SAAAC,GAAG,OAAIN,EAAeM,EAAnB,IACRC,OAAM,kBACLC,IAAAA,OAAAA,QAAwB,6CADnB,GAGV,GAAE,KAGD,gCACGT,IAAe,SAACL,EAAD,UAAW,oBAC3B,SAAC,EAAAe,SAAD,CAAUC,UAAU,SAAC,IAAD,IAApB,SACGX,IAAe,SAACH,EAAD,CAAWe,OAAQZ,QAI1C,C,kGC5BKa,EAAU,mCACVC,EAAW,gCACXC,EAAS,qBAEAC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,0GAIYC,EAAAA,EAAAA,IAAA,UAAaH,GAAb,OAAwBC,EAAxB,oBAA0CF,IAJtD,uBAEIK,KAAQC,EAFZ,EAEYA,QAASC,EAFrB,EAEqBA,cAGJ,MALjB,EAGIC,QAEsC,IAAlBD,EALxB,uBAMU,IAAIE,MANd,iCAOgBC,OAAOC,OAAOL,IAP9B,mEAUeM,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA8BC,GAA9B,yFACiCT,EAAAA,EAAAA,IAAA,UAC1BH,EAD0B,iBACTY,EADS,oBACUb,IAF3C,mBACUK,EADV,EACUA,KAIO,MALjB,EACgBG,QAISH,EALzB,sBAMU,IAAII,MANd,gCAOgBJ,GAPhB,mEAUeS,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAgCD,GAAhC,yFACiCT,EAAAA,EAAAA,IAAA,UAC1BH,EAD0B,iBACTY,EADS,4BACkBb,IAFnD,mBACUK,EADV,EACUA,KAIO,MALjB,EACgBG,QAISH,EALzB,sBAMU,IAAII,MANd,gCAOgBJ,GAPhB,mEAUeU,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAgCF,GAAhC,yFACiCT,EAAAA,EAAAA,IAAA,UAC1BH,EAD0B,iBACTY,EADS,4BACkBb,IAFnD,mBACUK,EADV,EACUA,KAIO,MALjB,EACgBG,QAISH,EALzB,sBAMU,IAAII,MANd,gCAOgBJ,GAPhB,mEAUeW,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,iHAAgCC,EAAhC,+BAAwC,GAAIC,EAA5C,+BAAmD,EAAnD,SAIYd,EAAAA,EAAAA,IAAA,UACLH,EADK,8BACyBgB,EADzB,iBACuCC,EADvC,oBACuDlB,EADvD,wCAJZ,uBAEIK,KAAQC,EAFZ,EAEYA,QAASC,EAFrB,EAEqBA,cAKJ,MAPjB,EAGIC,QAIsC,IAAlBD,EAPxB,uBAQU,IAAIE,MARd,iCASgBH,GAThB,oEAYO,IAAMd,EAAM,CACjBW,iBAvDF,WAEeA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EAsDba,iBAxBF,WAUeA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EAebJ,eAvDF,SAU8B,GAAfA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EA8CbE,iBA9CF,SAUgC,GAAjBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EAqCbC,iBArCF,SAUgC,GAAjBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,E","sources":["pages/Home/Home.styled.js","pages/Home/Home.jsx","services/fetchMovies.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const HomeTitle = styled.h1`\n  padding-top: 15px;\n  padding-left: 15px;\n  margin: 0;\n`;\n","import { useState, useEffect, lazy, Suspense } from 'react';\nimport { API } from 'services/fetchMovies';\nimport Notiflix from 'notiflix';\nimport { HomeTitle } from './Home.styled';\nimport { Loader } from 'services/loader';\n\nconst MovieList = lazy(() =>\n  import('../../components/MovieList/MovieList.jsx')\n);\n\nconst Home = () => {\n  const [trendMovies, setTrendMovies] = useState(null);\n  localStorage.removeItem('movies');\n\n  useEffect(() => {\n    API.fetchMovieTrends()\n      .then(res => setTrendMovies(res))\n      .catch(() =>\n        Notiflix.Notify.warning('Sorry, today there are not trending movies')\n      );\n  }, []);\n\n  return (\n    <>\n      {trendMovies && <HomeTitle>Trending today</HomeTitle>}\n      <Suspense fallback={<Loader />}>\n        {trendMovies && <MovieList movies={trendMovies} />}\n      </Suspense>\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst API_KEY = '56c9cff34398937cd3a30d65e68fe36d';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst TRENDS = 'trending/movie/day';\n\nasync function fetchMovieTrends() {\n  const {\n    data: { results, total_results },\n    status,\n  } = await axios.get(`${BASE_URL}${TRENDS}?api_key=${API_KEY}`);\n  if (status !== 200 || total_results === 0) {\n    throw new Error();\n  } else return Object.values(results);\n}\n\nasync function fetchMovieById(IdMovie) {\n  const { data, status } = await axios.get(\n    `${BASE_URL}movie/${IdMovie}?api_key=${API_KEY}`\n  );\n\n  if (status !== 200 || !data) {\n    throw new Error();\n  } else return data;\n}\n\nasync function fetchCreditsById(IdMovie) {\n  const { data, status } = await axios.get(\n    `${BASE_URL}movie/${IdMovie}/credits?api_key=${API_KEY}`\n  );\n\n  if (status !== 200 || !data) {\n    throw new Error();\n  } else return data;\n}\n\nasync function fetchReviewsById(IdMovie) {\n  const { data, status } = await axios.get(\n    `${BASE_URL}movie/${IdMovie}/reviews?api_key=${API_KEY}`\n  );\n\n  if (status !== 200 || !data) {\n    throw new Error();\n  } else return data;\n}\n\nasync function fetchMovieSearch(query = '', page = 1) {\n  const {\n    data: { results, total_results },\n    status,\n  } = await axios.get(\n    `${BASE_URL}search/movie?query=${query}&page=${page}&api_key=${API_KEY}&language=en-US&include_adult=false`\n  );\n  if (status !== 200 || total_results === 0) {\n    throw new Error();\n  } else return results;\n}\n\nexport const API = {\n  fetchMovieTrends,\n  fetchMovieSearch,\n  fetchMovieById,\n  fetchCreditsById,\n  fetchReviewsById,\n};\n"],"names":["HomeTitle","styled","MovieList","lazy","useState","trendMovies","setTrendMovies","localStorage","removeItem","useEffect","API","then","res","catch","Notiflix","Suspense","fallback","movies","API_KEY","BASE_URL","TRENDS","fetchMovieTrends","axios","data","results","total_results","status","Error","Object","values","fetchMovieById","IdMovie","fetchCreditsById","fetchReviewsById","fetchMovieSearch","query","page"],"sourceRoot":""}