{"version":3,"file":"static/js/742.dfbc4851.chunk.js","mappings":"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","sources":["components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.jsx","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx","services/fetchMovies.js","services/posterUrl.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CardWrapper = styled.section`\n  display: flex;\n  gap: 20px;\n  margin-top: 20px;\n  padding-left: 40px;\n`;\n\nexport const Poster = styled.img`\n  display: block;\n  max-width: 200px;\n  height: 100%;\n`;\n\nexport const MovieInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  padding-left: 200px;\n`;\n\nexport const Title = styled.h1`\n  margin: 0;\n`;\n\nexport const Subtitle = styled.h2`\n  color: inherit;\n  margin: 0;\n`;\n\nexport const Text = styled.p`\n  font-size: 16px;\n  font-weight: 400;\n  padding-top: 5px;\n  margin: 0;\n`;\n\nexport const AddInfo = styled.h2`\n  color: inherit;\n  margin: 0;\n  padding-top: 30px;\n  padding-left: 40px;\n`;\n","import PropTypes from 'prop-types';\nimport { format } from 'date-fns';\nimport { POSTER_URL } from '../../services/posterUrl';\nimport {\n  CardWrapper,\n  MovieInfo,\n  Title,\n  Subtitle,\n  Poster,\n  Text,\n  AddInfo,\n} from './MovieCard.styled';\nimport noImage from '../../images/noImage.png';\n\nexport const MovieCard = ({\n  movieDetails: {\n    poster_path,\n    genres,\n    overview,\n    release_date,\n    title,\n    vote_average,\n  },\n}) => {\n  const genresNames = genres.map(genre => genre.name).join(', ');\n\n  return (\n    <>\n      <CardWrapper>\n        {poster_path && (\n          <Poster src={`${POSTER_URL}${poster_path}`} alt={title} />\n        )}\n        {!poster_path && <Poster src={noImage} alt={title} />}\n        <MovieInfo>\n          <Title> {title} </Title>\n          <Subtitle>\n            Released by:\n            <Text>{format(new Date(release_date), 'yyyy MMM dd')}</Text>\n          </Subtitle>\n          <Subtitle>User Score: {Math.round(vote_average * 10)}%</Subtitle>\n          <Subtitle>\n            Overview:\n            <Text>{overview}</Text>\n          </Subtitle>\n          <Subtitle>\n            Genres:\n            <Text>{genresNames}</Text>\n          </Subtitle>\n        </MovieInfo>\n      </CardWrapper>\n      <AddInfo>Additional information</AddInfo>\n    </>\n  );\n};\n\nMovieCard.propTypes = {\n  movieDetails: PropTypes.object.isRequired,\n};\n","import styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { NavLink, Link } from 'react-router-dom';\n\nexport const ButtonGoBack = ({ to, children }) => {\n  return <ButtonStyles to={to}>{children}</ButtonStyles>;\n};\n\nexport const ButtonStyles = styled(Link)`\n  font-size: 16px;\n  text-decoration: none;\n  text-align: center;\n  display: inline-block;\n  color: inherit;\n  background-color: rgb(220, 220, 220);\n\n  width: 120px;\n  margin-top: 10px;\n  margin-left: 40px;\n  padding: 5px 10px;\n\n  border-radius: 2px;\n  border: none;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    background-color: rgb(200, 200, 200);\n    color: orange;\n  }\n`;\n\nexport const AddInfoWrapper = styled.div`\n  display: flex;\n  gap: 25px;\n  padding-left: 40px;\n  margin-top: 10px;\n`;\n\nexport const InfoItem = styled(NavLink)`\n  font-size: 18px;\n  text-decoration: none;\n  text-align: center;\n  color: inherit;\n  background-color: rgb(220, 220, 220);\n  padding: 5px 10px;\n  width: 100px;\n  margin: 0;\n\n  border-radius: 2px;\n  border: none;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    background-color: rgb(210, 210, 210);\n    color: orange;\n  }\n`;\n\nButtonGoBack.propTypes = {\n  to: PropTypes.string.isRequired,\n};\n","import { useParams, Outlet, useLocation } from 'react-router-dom';\nimport { useState, useEffect, useRef, Suspense } from 'react';\nimport { API } from '../../services/fetchMovies';\nimport { Loader } from '../../services/loader';\nimport { MovieCard } from 'components/MovieCard/MovieCard';\nimport { ButtonGoBack, AddInfoWrapper, InfoItem } from './MovieDetails.styled';\nimport Notiflix from 'notiflix';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState();\n\n  const location = useLocation();\n\n  const initialPath = useRef(location?.state?.from?.pathname || null);\n\n  let backLink = '';\n  if (initialPath.current === '/') {\n    backLink = '/';\n  } else backLink = '/movies';\n\n  useEffect(() => {\n    API.fetchMovieById(movieId)\n      .then(movie => setMovieDetails(movie))\n      .catch(() =>\n        Notiflix.Notify.info('Sorry, there are not details of this movie')\n      );\n  }, [movieId]);\n\n  return (\n    <>\n      {movieDetails && (\n        <Suspense fallback={<Loader />}>\n          <ButtonGoBack to={backLink}>â¬… Go back</ButtonGoBack>\n          <MovieCard movieDetails={movieDetails} />\n          <AddInfoWrapper>\n            <InfoItem to={`/movies/${movieId}/cast`}>Cast</InfoItem>\n            <InfoItem to={`/movies/${movieId}/reviews`}>Reviews</InfoItem>\n          </AddInfoWrapper>\n        </Suspense>\n      )}\n      {movieDetails && (\n        <Suspense fallback={<Loader />}>\n          <Outlet />\n        </Suspense>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = '56c9cff34398937cd3a30d65e68fe36d';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst TRENDS = 'trending/movie/day';\n\nasync function fetchMovieTrends() {\n  const {\n    data: { results, total_results },\n    status,\n  } = await axios.get(`${BASE_URL}${TRENDS}?api_key=${API_KEY}`);\n  if (status !== 200 || total_results === 0) {\n    throw new Error();\n  } else return Object.values(results);\n}\n\nasync function fetchMovieById(IdMovie) {\n  const { data, status } = await axios.get(\n    `${BASE_URL}movie/${IdMovie}?api_key=${API_KEY}`\n  );\n\n  if (status !== 200 || !data) {\n    throw new Error();\n  } else return data;\n}\n\nasync function fetchCreditsById(IdMovie) {\n  const { data, status } = await axios.get(\n    `${BASE_URL}movie/${IdMovie}/credits?api_key=${API_KEY}`\n  );\n\n  if (status !== 200 || !data) {\n    throw new Error();\n  } else return data;\n}\n\nasync function fetchReviewsById(IdMovie) {\n  const { data, status } = await axios.get(\n    `${BASE_URL}movie/${IdMovie}/reviews?api_key=${API_KEY}`\n  );\n\n  if (status !== 200 || !data) {\n    throw new Error();\n  } else return data;\n}\n\nasync function fetchMovieSearch(query = '', page = 1) {\n  const {\n    data: { results, total_results },\n    status,\n  } = await axios.get(\n    `${BASE_URL}search/movie?query=${query}&page=${page}&api_key=${API_KEY}&language=en-US&include_adult=false`\n  );\n  if (status !== 200 || total_results === 0) {\n    throw new Error();\n  } else return results;\n}\n\nexport const API = {\n  fetchMovieTrends,\n  fetchMovieSearch,\n  fetchMovieById,\n  fetchCreditsById,\n  fetchReviewsById,\n};\n","export const POSTER_URL = 'https://image.tmdb.org/t/p/original';\n"],"names":["CardWrapper","styled","Poster","MovieInfo","Title","Subtitle","Text","AddInfo","MovieCard","movieDetails","poster_path","genres","overview","release_date","title","vote_average","genresNames","map","genre","name","join","src","POSTER_URL","alt","noImage","format","Date","Math","round","ButtonGoBack","to","children","ButtonStyles","Link","AddInfoWrapper","InfoItem","NavLink","movieId","useParams","useState","setMovieDetails","location","useLocation","backLink","useRef","state","from","pathname","current","useEffect","API","then","movie","catch","Notiflix","Suspense","fallback","API_KEY","BASE_URL","TRENDS","fetchMovieTrends","axios","data","results","total_results","status","Error","Object","values","fetchMovieById","IdMovie","fetchCreditsById","fetchReviewsById","fetchMovieSearch","query","page"],"sourceRoot":""}